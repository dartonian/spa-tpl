{
  "name": "set-value",
  "description": "Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths.",
  "version": "0.2.0",
  "homepage": "https://github.com/jonschlinkert/set-value",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/set-value.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/set-value/issues"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/jonschlinkert/set-value/blob/master/LICENSE"
  },
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "isobject": "^1.0.0",
    "noncharacters": "^1.1.0"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "^5.2.0"
  },
  "keywords": [
    "get",
    "has",
    "hasown",
    "key",
    "keys",
    "nested",
    "notation",
    "object",
    "prop",
    "properties",
    "property",
    "props",
    "set",
    "value",
    "values"
  ],
  "readme": "# set-value [![NPM version](https://badge.fury.io/js/set-value.svg)](http://badge.fury.io/js/set-value)  [![Build Status](https://travis-ci.org/jonschlinkert/set-value.svg)](https://travis-ci.org/jonschlinkert/set-value)\n\n> Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths.\n\nInstall with [npm](https://www.npmjs.com/)\n\n```bash\nnpm i set-value --save\n```\n\n## Usage\n\n```js\nvar set = require('set-value');\n\nvar obj = {};\nset(obj, 'a.b.c', 'd');\nconsole.log(obj);\n//=> {a: {b: c: 'd'}}\n```\n\n## Related projects\n\n* [any](https://github.com/jonschlinkert/any): Returns `true` if a value exists in the given string, array or object.\n* [get-value](https://github.com/jonschlinkert/get-value): Use property paths (`  a.b.c`) get a nested value from an object.\n* [has-own-deep](https://github.com/jonschlinkert/has-own-deep): Returns true if an object has an own, nested property using dot notation paths ('a.b.c').\n* [has-value](https://github.com/jonschlinkert/has-value): Returns true if a value exists, false if empty. Works with deeply nested values usingâ€¦ [more](https://github.com/jonschlinkert/has-value)\n* [has-any](https://github.com/jonschlinkert/has-any): Returns true if an object has any of the specified keys.\n* [has-any-deep](https://github.com/jonschlinkert/has-any-deep): Return true if `key` exists deeply on the given object.\n\n## Running tests\n\nInstall dev dependencies:\n\n```bash\nnpm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/set-value/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright (c) 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on May 12, 2015._\n\n<!-- deps: mocha should -->",
  "readmeFilename": "README.md",
  "_id": "set-value@0.2.0",
  "dist": {
    "shasum": "71153ee1c4b81e029dbfead142e800f64cc878e1"
  },
  "_from": "set-value@^0.2.0",
  "_resolved": "https://registry.npmjs.org/set-value/-/set-value-0.2.0.tgz"
}
