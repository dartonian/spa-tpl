{
  "name": "engine",
  "description": "Template engine based on Lo-Dash template, but adds features like the ability to register helpers and more easily set data to be used as context in templates.",
  "version": "0.1.11",
  "homepage": "https://github.com/jonschlinkert/engine",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/engine"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/engine/issues"
  },
  "license": "MIT",
  "files": [
    "index.js",
    "lib"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "assign-deep": "^0.4.3",
    "collection-visit": "^0.2.0",
    "get-value": "^1.2.1",
    "kind-of": "^2.0.1",
    "lazy-cache": "^0.2.3",
    "object.omit": "^2.0.0",
    "set-value": "^0.2.0"
  },
  "devDependencies": {
    "ansi-red": "^0.1.1",
    "extend-shallow": "^2.0.1",
    "for-in": "^0.1.4",
    "lodash": "^3.10.1",
    "mocha": "*",
    "shallow-clone": "^0.1.1",
    "should": "*",
    "template-helpers": "^0.3.2",
    "time-require": "jonschlinkert/time-require"
  },
  "keywords": [
    "compile",
    "data",
    "engine",
    "erb",
    "helper",
    "helpers",
    "lodash",
    "register",
    "render",
    "renderer",
    "template",
    "templates",
    "underscore"
  ],
  "verb": {
    "related": {
      "list": [
        "template",
        "assemble",
        "verb",
        "scaffold",
        "snippet"
      ]
    }
  },
  "readme": "# engine [![NPM version](https://img.shields.io/npm/v/engine.svg)](https://www.npmjs.com/package/engine)\n\n> Template engine based on Lo-Dash template, but adds features like the ability to register helpers and more easily set data to be used as context in templates.\n\nThis code is based on [Lo-Dash's][lodash] `_.template` method, with a few additions, like the ability to register helpers and more easily control context.\n\n## Install\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm i engine --save\n```\n\n## Table of contents\n- [Usage](#usage)\n- [API](#api)\n- [Related projects](#related-projects)\n- [Running tests](#running-tests)\n- [Contributing](#contributing)\n- [Author](#author)\n- [License](#license)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n## Usage\n\n```js\nvar engine = require('engine');\n\nengine.helper('upper', function(str) {\n  return str.toUpperCase();\n});\n\nengine.render('<%= upper(name) %>', {name: 'Brian'});\n//=> 'BRIAN'\n```\n\n## API\n\n### [Engine](index.js#L28)\nCreate an instance of `Engine` with the given options.\n\n\n**Params**\n\n* `options` **{Object}**    \n\n**Example**\n\n\n\n```js\nvar Engine = require('engine');\nvar engine = new Engine();\n\n// or\nvar engine = require('engine')();\n```\n\n\n### [.helper](index.js#L82)\nRegister a template helper.\n\n\n**Params**\n\n* `prop` **{String}**    \n* `fn` **{Function}**    \n* `returns` **{Object}**: Instance of `Engine` for chaining  \n\n**Example**\n\n\n\n```js\nengine.helper('upper', function(str) {\n  return str.toUpperCase();\n});\n\nengine.render('<%= upper(user) %>', {user: 'doowb'});\n//=> 'DOOWB'\n```\n\n\n### [.helpers](index.js#L99)\n\nRegister an object of template helpers.\n\n**Params**\n\n* `helpers` **{Object|Array}**: Object or array of helper objects.    \n* `returns` **{Object}**: Instance of `Engine` for chaining  \n\n\n\n### [.data](index.js#L118)\nAdd data to be passed to templates as context.\n\n\n**Params**\n\n* `key` **{String|Object}**: Property key, or an object    \n* `value` **{any}**: If key is a string, this can be any typeof value    \n* `returns` **{Object}**: Engine instance, for chaining  \n\n**Example**\n\n\n\n```js\nengine.data({first: 'Brian'});\nengine.render('<%= last %>, <%= first %>', {last: 'Woodward'});\n//=> 'Woodward, Brian'\n```\n\n\n### [.compile](index.js#L187)\nCreates a compiled template function that can interpolate data properties in \"interpolate\" delimiters, HTML-escape interpolated data properties in \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data properties may be accessed as free variables in the template. If a setting object is provided it takes precedence over `engine.settings` values.\n\n\n**Params**\n\n* `str` **{string}**: The template string.    \n* `opts` **{Object}**: The options object.    \n* `escape` **{RegExp}**: The HTML \"escape\" delimiter.    \n* `evaluate` **{RegExp}**: The \"evaluate\" delimiter.    \n* `imports` **{Object}**: An object to import into the template as free variables.    \n* `interpolate` **{RegExp}**: The \"interpolate\" delimiter.    \n* `sourceURL` **{string}**: The sourceURL of the template's compiled source.    \n* `variable` **{string}**: The data object variable name.    \n* `returns` **{Function}**: Returns the compiled template function.  \n\n**Example**\n\n\n\n```js\nvar fn = engine.compile('Hello, <%= user %>!');\n//=> [function]\n\nfn({user: 'doowb'});\n//=> 'Hello, doowb!'\n\nfn({user: 'halle'});\n//=> 'Hello, halle!'\n```\n\n\n### [.render](index.js#L304)\nRenders templates with the given data and returns a string.\n\n\n**Params**\n\n* `str` **{String}**    \n* `data` **{Object}**    \n* `returns` **{String}**  \n\n**Example**\n\n\n\n```js\nengine.render('<%= user %>', {user: 'doowb'});\n//=> 'doowb'\n```\n\n\n\n## Related projects\n* [assemble](https://www.npmjs.com/package/assemble): Assemble is a powerful, extendable and easy to use static site generator for node.js. Used… [more](https://www.npmjs.com/package/assemble) | [homepage](https://github.com/assemble/assemble)\n* [scaffold](https://www.npmjs.com/package/scaffold): Conventions and API for creating declarative configuration objects for project scaffolds - similar in format… [more](https://www.npmjs.com/package/scaffold) | [homepage](https://github.com/jonschlinkert/scaffold)\n* [snippet](https://www.npmjs.com/package/snippet): CLI and API for easily creating, reusing, sharing and generating snippets of code from the… [more](https://www.npmjs.com/package/snippet) | [homepage](https://github.com/jonschlinkert/snippet)\n* [template](https://www.npmjs.com/package/template): Render templates using any engine. Supports, layouts, pages, partials and custom template types. Use template… [more](https://www.npmjs.com/package/template) | [homepage](https://github.com/jonschlinkert/template)\n* [verb](https://www.npmjs.com/package/verb): Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used… [more](https://www.npmjs.com/package/verb) | [homepage](https://github.com/verbose/verb)\n\n## Running tests\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/engine/issues/new).\n\n## Author\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\nCopyright © 2016 [Jon Schlinkert](https://github.com/jonschlinkert)\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb) on January 21, 2016._\n\n\n\n\n[lodash]: https://lodash.com/\n[verb]: https://github.com/verbose/verb\n\n",
  "readmeFilename": "README.md",
  "_id": "engine@0.1.11",
  "dist": {
    "shasum": "28abf230a52a01e18ed248dbb28229f4b70ee78a"
  },
  "_from": "engine@^0.1.8",
  "_resolved": "https://registry.npmjs.org/engine/-/engine-0.1.11.tgz"
}
