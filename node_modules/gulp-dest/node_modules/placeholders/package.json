{
  "name": "placeholders",
  "description": "Replace placeholder values in a file path.",
  "version": "0.2.0",
  "homepage": "https://github.com/jonschlinkert/placeholders",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/placeholders"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/placeholders/issues"
  },
  "license": "MIT",
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "assign-deep": "^0.3.1",
    "expand": "^0.3.1"
  },
  "devDependencies": {
    "gulp": "^3.9.0",
    "gulp-istanbul": "^0.10.0",
    "gulp-jshint": "^1.11.2",
    "gulp-mocha": "^2.1.3",
    "jshint-stylish": "^2.0.1",
    "mocha": "*"
  },
  "keywords": [
    "dot",
    "dot-notation",
    "file",
    "filepath",
    "interpolate",
    "notation",
    "param",
    "parameter",
    "path",
    "permalink",
    "placeholder",
    "prop",
    "rewrite",
    "url"
  ],
  "readme": "# placeholders [![NPM version](https://badge.fury.io/js/placeholders.svg)](http://badge.fury.io/js/placeholders)\n\n> Replace placeholder values in a file path.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i placeholders --save\n```\n\n## Usage\n\n```js\nvar placeholders = require('placeholders')(options);\n\nplaceholders('/site/blog/:path', {path: 'foo-bar.md'});\n//=> '/site/blog/foo-bar.md'\n```\n\n## Options\n\nOptions may be passed to the main function.\n\n```js\nvar placeholders = require('placeholders')(options);\n```\n\n### options.regex\n\nPass a custom regex to use for replacements.\n\n**Type**: `{RegExp}`\n\n**Default**: the default regex matches es6 delimiters and lodash template syntax.\n\n**Example**\n\nMatch [printf-like](https://en.wikipedia.org/wiki/Printf_format_string) strings:\n\n```js\nvar placeholders = require('placeholders')({\n  regex: /%([^%]+)%/\n});\n```\n\n### options.data\n\nPass a `data` object on the main function to use for resolving values.\n\n**Type**: `{Object}`\n\n**Default**: `undefined`\n\n**Example**\n\n```js\nvar placeholders = require('placeholders')({\n  data: {foo: 'one', bar: 'two'}\n});\n\nplaceholders(':foo/:bar/:baz', {baz: 'three'})\n//=> 'one/two/three'\n```\n\n### returns a function when no data is passed\n\nThis allows you to reuse the same pattern with different data,\nlike a compiled template.\n\n```js\nvar placeholders = require('placeholders')({\n  regex: /%([^%]+)%/\n});\n\nvar fn = placeholders('foo/%bar%/%baz%');\nfn({bar: 'one', baz: 'two'})\n//=> 'foo/one/two'\nfn({bar: 'a', baz: 'b'})\n//=> 'foo/a/b'\n```\n\n## Related projects\n\n* [assign-deep](https://www.npmjs.com/package/assign-deep): Deeply assign the enumerable properties of source objects to a destination object. | [homepage](https://github.com/jonschlinkert/assign-deep)\n* [expand](https://www.npmjs.com/package/expand): Recursively resolve templates in an object, string or array. | [homepage](https://github.com/jonschlinkert/expand)\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/placeholders/issues/new).\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright Â© 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on September 17, 2015._\n",
  "readmeFilename": "README.md",
  "_id": "placeholders@0.2.0",
  "dist": {
    "shasum": "4b08412a15e45ffead84149455d8d0b199e2a93d"
  },
  "_from": "placeholders@^0.2.0",
  "_resolved": "https://registry.npmjs.org/placeholders/-/placeholders-0.2.0.tgz"
}
