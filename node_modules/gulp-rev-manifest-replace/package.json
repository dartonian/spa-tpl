{
  "name": "gulp-rev-manifest-replace",
  "version": "0.0.3",
  "description": "Plugin to replace assets urls based on generated manifest file",
  "main": "replace.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "gulp",
    "rev"
  ],
  "author": {
    "name": "jiyinyiyong"
  },
  "license": "MIT",
  "devDependencies": {},
  "dependencies": {
    "gulp-util": "^3.0.0",
    "through2": "^0.6.1",
    "url-join": "0.0.1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mvc-works/gulp-rev-manifest-replace.git"
  },
  "bugs": {
    "url": "https://github.com/mvc-works/gulp-rev-manifest-replace/issues"
  },
  "homepage": "https://github.com/mvc-works/gulp-rev-manifest-replace",
  "readme": "\nGulp rev manifest replace\n------\n\nPlugin to replace assets urls based on generated manifest file.\nAs it sounds like, it needs to be used after [`gulp-rev`][rev] created the `rev-manifest.json`.\n\n[rev]: https://github.com/sindresorhus/gulp-rev\n\n### Usage\n\n```\nnpm i -D gulp-rev-manifest-replace\n```\n\nThe way it works is to read files and replace patterns listed in the manifest.\n\nThis plugin is created for projects with simple pages like single pages apps.\nAnd we still need tool replacing links to put them on CDNs.\nThere are nice plugins like [`gulp-rev-replace`][revReplace],\nbut suppose we write HTML in Jade, or the way we using CDN differently.\nI think it can me easier with tools like this.\n\n[revReplace]: https://github.com/jamesknelson/gulp-rev-replace\n\n##### Options\n\n* `base`(**required**): `<absolute filepath>`\n\nSince `rev-manifest.json` provides absolute paths, I have to figure out the relative ones.\n\n* `manifest`(**required**): `<JSON>`\n\nThe generated manifest, and in JSON.\n\n* `path`(optional): `<url in absolute path>`\n\nIf `path` is added, it will be prefixed to the relative path as the searching pattern.\n\n* `cdnPrefix`(optinal): `<url>`\n\nIf `cdnPrefix` is specified, it willbe prepended to the replace results.\n\nSo, to replace:\n\n```jade\nif config.dev\n  script(src=\"/site/build/a.js\")\nelse\n  img(src=\"/site/images/b.png\")\n```\n\nto:\n\n```jade\nif config.dev\n  script(src=\"http://tiye.me/cdn/build/a.js\")\nelse\n  img(src=\"http://tiye.me/cdn/images/b.png\")\n```\n\nYou may need this(the demo is in fake code though):\n\n```coffee\nrev = require 'gulp-rev'\nreplace = require 'gulp-rev-manifest-replace'\n\n# generate manifest first\ngulp.task 'rev', ['clean-dist'], ->\n  gulp\n  .src ['build/*.js', 'build/*.css', 'images/*'], base: './'\n  .pipe rev()\n  .pipe gulp.dest('dist/')\n  .pipe rev.manifest()\n  .pipe gulp.dest('./')\n\n# begin to replace\ngulp.task 'replace', ['rev'], ->\n\n  manifest = require './rev-manifest.json'\n\n  gulp\n  .src ['dist/build/*.css']\n  .pipe replaceRev\n    base: __dirname\n    manifest: manifest\n    path: '/site'\n    cdnPrefix: 'http://tiye.me/cdn/'\n  .pipe gulp.dest('dist/build/')\n\n  gulp\n  .src ['views/*.jade']\n  .pipe replaceRev\n    base: __dirname\n    manifest: manifest\n    path: '/site'\n    cdnPrefix: 'http://tiye.me/cdn/'\n  .pipe gulp.dest('dist/views/')\n```\n\n### License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "gulp-rev-manifest-replace@0.0.3",
  "dist": {
    "shasum": "0103ea88378e58f23bcf6da71b7c37699bd5b362"
  },
  "_from": "gulp-rev-manifest-replace@0.0.3",
  "_resolved": "https://registry.npmjs.org/gulp-rev-manifest-replace/-/gulp-rev-manifest-replace-0.0.3.tgz"
}
