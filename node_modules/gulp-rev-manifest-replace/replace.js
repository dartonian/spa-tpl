// Generated by CoffeeScript 1.7.1
var c, gutil, path, through, urljoin;

through = require('through2');

gutil = require('gulp-util');

path = require('path');

urljoin = require('url-join');

c = function(str) {
  return "\x1B[34m" + str + "\x1B[39m";
};

module.exports = function(options) {
  options = options || {};
  if (options.base == null) {
    throw new Error('options.base has to be a string of an absolute path');
  }
  if (options.manifest == null) {
    throw new Error('options.manifest is required');
  }
  return through.obj(function(file, enc, callback) {
    var contents, fullpath, logPath, outfile, parts, short, wanted, _ref;
    outfile = file.clone();
    contents = String(outfile.contents);
    _ref = options.manifest;
    for (fullpath in _ref) {
      wanted = _ref[fullpath];
      short = path.relative(options.base, fullpath);
      if (options.path != null) {
        short = path.join(options.path, short);
      }
      if (options.cdnPrefix != null) {
        wanted = urljoin(options.cdnPrefix, wanted);
      }
      parts = contents.split(short);
      if (parts.length > 1) {
        logPath = path.relative(options.base, file.path);
        gutil.log("Rev replacing " + (c(short)) + " to " + (c(wanted)) + " in " + (c(logPath)));
      }
      contents = parts.join(wanted);
    }
    outfile.contents = new Buffer(contents);
    this.push(outfile);
    return callback();
  });
};
